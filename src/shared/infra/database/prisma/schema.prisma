// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model PrismaUser {
  id                          String               @id
  name                        String
  email                       String               @unique
  password                    String
  passwordResetToken          String?              @map("password_reset_token")
  passwordResetTokenExpiresAt DateTime?            @map("password_reset_token_expires_at")
  role                        Role                 @default(USER)
  isDeleted                   Boolean              @default(false) @map("is_deleted")
  isEmailConfirmed            Boolean              @default(false) @map("is_email_confirmed")
  emailConfirmationToken      String?              @map("email_confirmation_token")
  refreshTokens               PrismaRefreshToken[]
  customer                    PrismaCustomer?

  @@map("users")
}

model PrismaRefreshToken {
  id        String     @id
  token     String     @unique
  expiresAt DateTime   @map("expires_at")
  user      PrismaUser @relation(fields: [userId], references: [id])
  userId    String     @map("user_id")

  @@map("refresh_tokens")
}

model PrismaReservation {
  id          String         @id
  recurringId String         @map("recurring_id")
  name        String
  customer    PrismaCustomer @relation(fields: [customerId], references: [userId])
  customerId  String         @map("owner_id")
  startTime   DateTime       @map("start_time")
  endTime     DateTime       @map("end_time")
  isActive    Boolean        @default(false) @map("is_active")
  tableTennis Boolean        @default(false) @map("table_tennis")
  badminton   Boolean        @default(false)
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
}

model PrismaCustomer {
  id           String              @id
  user         PrismaUser          @relation(fields: [userId], references: [id])
  userId       String              @unique @map("user_id")
  reservations PrismaReservation[]

  @@index([userId])
}
